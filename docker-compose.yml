#docker-composeのver.
version: '3'

#docker-composeではアプリケーションを動かすための各要素をserviseと呼んでいる
#通常、web(rails)とdb(mysql)と名づける
#ports:コンテナにアクセスするために必須。コンテナ内のポート3000番をホストの3000番にマッピングするという意味。これによりコンテナ内のwebサーバへhttp://localhist:3000でアクセス可能になる
#volumes:データを永続化するためにある。コンテナは破棄できるがDBも削除されるため、 ローカルのファイル(下記でいう./db/mysql/volumes)をコンテナ内の/var/lib/mysqlにマウント（同期）させている
#command: bash -c "rm -f tmp/pids/server.pid  pidはプロセスIDのこと。サーバ起動時tmp/pids/server.pidに書き込まれ終了するときに削除される。つまり、これがあると起動中と判断されるので、それを削除して、rails s
#depends_on 依存関係を示していて、起動順を制御できる。下記ではDBからWEBへと起動。
services:
  db:
    image: mysql:8.0
    environment:
        #MYSQL_USER: root
        MYSQL_ROOT_PASSWORD: password
        # MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
        MYSQL_DATABASE: test_db
        MYSQL_USER: user
        # MYSQL_PASSWORD: userpw
    #command: mysqld --skip-grant-tables --skip-networking
    ports:
        - "3306:3306"
    volumes:
        - ./db/mysql/volumes:/var/lib/mysql

  web:
    build: .
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    volumes:
        - .:/myapp
    ports:
        - 3000:3000
    depends_on:
        - db
    tty: true
    stdin_open: true
volumes:
  gem_data: